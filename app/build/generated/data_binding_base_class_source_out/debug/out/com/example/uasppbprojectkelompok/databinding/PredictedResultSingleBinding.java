// Generated by view binder compiler. Do not edit!
package com.example.uasppbprojectkelompok.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.uasppbprojectkelompok.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PredictedResultSingleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final LinearLayout discountPredictProduct;

  @NonNull
  public final TextView discountTvPredictProduct;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final ImageView productAddToFavPredictProduct;

  @NonNull
  public final TextView productBrandNamePredictProduct;

  @NonNull
  public final ImageView productImagePredictProduct;

  @NonNull
  public final TextView productNamePredictProduct;

  @NonNull
  public final TextView productPricePredictProduct;

  @NonNull
  public final RatingBar productRatingPredictProduct;

  private PredictedResultSingleBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cardView, @NonNull LinearLayout discountPredictProduct,
      @NonNull TextView discountTvPredictProduct, @NonNull LinearLayout linearLayout5,
      @NonNull ImageView productAddToFavPredictProduct,
      @NonNull TextView productBrandNamePredictProduct,
      @NonNull ImageView productImagePredictProduct, @NonNull TextView productNamePredictProduct,
      @NonNull TextView productPricePredictProduct,
      @NonNull RatingBar productRatingPredictProduct) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.discountPredictProduct = discountPredictProduct;
    this.discountTvPredictProduct = discountTvPredictProduct;
    this.linearLayout5 = linearLayout5;
    this.productAddToFavPredictProduct = productAddToFavPredictProduct;
    this.productBrandNamePredictProduct = productBrandNamePredictProduct;
    this.productImagePredictProduct = productImagePredictProduct;
    this.productNamePredictProduct = productNamePredictProduct;
    this.productPricePredictProduct = productPricePredictProduct;
    this.productRatingPredictProduct = productRatingPredictProduct;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PredictedResultSingleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PredictedResultSingleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.predicted_result_single, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PredictedResultSingleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.discount_predictProduct;
      LinearLayout discountPredictProduct = ViewBindings.findChildViewById(rootView, id);
      if (discountPredictProduct == null) {
        break missingId;
      }

      id = R.id.discountTv_predictProduct;
      TextView discountTvPredictProduct = ViewBindings.findChildViewById(rootView, id);
      if (discountTvPredictProduct == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.productAddToFav_predictProduct;
      ImageView productAddToFavPredictProduct = ViewBindings.findChildViewById(rootView, id);
      if (productAddToFavPredictProduct == null) {
        break missingId;
      }

      id = R.id.productBrandName_predictProduct;
      TextView productBrandNamePredictProduct = ViewBindings.findChildViewById(rootView, id);
      if (productBrandNamePredictProduct == null) {
        break missingId;
      }

      id = R.id.productImage_predictProduct;
      ImageView productImagePredictProduct = ViewBindings.findChildViewById(rootView, id);
      if (productImagePredictProduct == null) {
        break missingId;
      }

      id = R.id.productName_predictProduct;
      TextView productNamePredictProduct = ViewBindings.findChildViewById(rootView, id);
      if (productNamePredictProduct == null) {
        break missingId;
      }

      id = R.id.productPrice_predictProduct;
      TextView productPricePredictProduct = ViewBindings.findChildViewById(rootView, id);
      if (productPricePredictProduct == null) {
        break missingId;
      }

      id = R.id.productRating_predictProduct;
      RatingBar productRatingPredictProduct = ViewBindings.findChildViewById(rootView, id);
      if (productRatingPredictProduct == null) {
        break missingId;
      }

      return new PredictedResultSingleBinding((ConstraintLayout) rootView, cardView,
          discountPredictProduct, discountTvPredictProduct, linearLayout5,
          productAddToFavPredictProduct, productBrandNamePredictProduct, productImagePredictProduct,
          productNamePredictProduct, productPricePredictProduct, productRatingPredictProduct);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
